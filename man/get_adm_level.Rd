% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fieldmaps.R
\name{get_adm_level}
\alias{get_adm_level}
\title{Get Administrative Boundaries for a Specific Level}
\usage{
get_adm_level(
  country,
  level,
  con = NULL,
  dataset = "humanitarian",
  geom = "polygons",
  check_max_level = TRUE
)
}
\arguments{
\item{country}{Character. Country name or ISO3 code to download boundaries for.}

\item{level}{Numeric. Administrative level to retrieve (1, 2, 3, or 4).
Level 1 represents the largest sub-national divisions (states/provinces),
with higher numbers representing smaller administrative units.}

\item{con}{DuckDB connection object. If NULL, a temporary connection will be created.}

\item{dataset}{Character. Dataset to use, either "humanitarian" or "open".
Default is "humanitarian". See https://fieldmaps.io/data/ for details.}

\item{geom}{Character. Geometry type to retrieve: "polygons", "lines", or "points".
Default is "polygons".}

\item{check_max_level}{Logical. Whether to validate that the requested level
exists for the country. Default is TRUE.}
}
\value{
An sf object containing the administrative boundaries with CRS 4326 (WGS84).
}
\description{
Downloads administrative boundary data for a specific administrative level
from the Field Maps dataset. Field Maps provides standardized administrative
boundaries for humanitarian and development use cases.
}
\examples{
\dontrun{
# Get level 1 administrative boundaries for Kenya
kenya_adm1 <- get_adm_level("Kenya", level = 1)

# Get level 2 boundaries using ISO3 code
ken_adm2 <- get_adm_level("KEN", level = 2)

# Use open dataset instead of humanitarian
boundaries <- get_adm_level("Uganda", level = 1, dataset = "open")
}

}
